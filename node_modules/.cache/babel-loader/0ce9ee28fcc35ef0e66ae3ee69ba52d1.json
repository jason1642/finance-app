{"ast":null,"code":"import React from 'react';\nimport marketOpenDates from '../resources/marketopenDates.json';\nconst isMarketOpenFunction = {\n  usaTime: () => Date().toLocaleString(\"en-US\", {\n    timeZone: \"America/New_York\"\n  }),\n  splitTime: () => this.usaTime.split(' '),\n  todaysDate: () => this.splitTime[0].slice(0, this.splitTime[0].length - 1),\n  usaYear: () => this.todaysDate.slice(6, this.todaysDate.length),\n  thisYearsHolidays: () => marketOpenDates.stockMarketHolidays.filter(ele => ele.year.toString() === this.usaYear),\n  splitHour: () => this.splitTime[1].split(\":\").slice(0, 2),\n  isItAHoliday: () => this.thisYearsHolidays.filter(ele => ele === this.todaysDate.slice(0, 5)).length > 0 ? 'true' : 'false',\n  isItAfterHours: () => {\n    if (this.splitTime[2] === 'PM' && this.splitTime[0] >= 4 && this.splitTime[0] <= 8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nisMarketOpenFunction.bind(this); // const isMarketOpenFunction = () => {\n//   const usaTime = new Date().toLocaleString(\"en-US\", { timeZone: \"America/New_York\" });\n//   const splitTime = usaTime.split(' ')\n//   const todaysDate = splitTime[0].slice(0, splitTime[0].length - 1)\n//   const usaYear = todaysDate.slice(6, todaysDate.length)\n//   const thisYearsHolidays = marketOpenDates.stockMarketHolidays.filter(ele => ele.year.toString() === usaYear)\n//   const splitHour = splitTime[1].split(\":\").slice(0, 2)\n//   const isItAHoliday = () => thisYearsHolidays.filter(ele => ele === todaysDate.slice(0, 5)).length > 0 ? 'true' : 'false'\n//   const isItAfterHours = () => {\n//     if (splitTime[2] === 'PM' && splitTime[0] >= 4 && splitTime[0] <= 8) {\n//       return true\n//     } else {\n//       return false\n//     }\n//   }\n// }\n\nexport default isMarketOpenFunction; // eastern time\n// premarket is 4am to 9:30am\n// afterhours is 4pm to 8pm\n// console.log(todaysDate)\n// console.log(usaYear)\n// console.log(thisYearsHolidays)\n// const currentTime = () => {\n//   return todaysDate\n// }\n// console.log(todaysDate.slice(0, 5))\n// console.log(isItAfterHours())\n// console.log(splitHour)\n// console.log(splitTime)","map":{"version":3,"sources":["/Users/jasoncruz/Documents/clones/finance-app/src/resources/isMarketOpenFunction.jsx"],"names":["React","marketOpenDates","isMarketOpenFunction","usaTime","Date","toLocaleString","timeZone","splitTime","split","todaysDate","slice","length","usaYear","thisYearsHolidays","stockMarketHolidays","filter","ele","year","toString","splitHour","isItAHoliday","isItAfterHours","bind"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,MAAMC,oBAAoB,GAAG;AAE3BC,EAAAA,OAAO,EAAE,MAAMC,IAAI,GAAGC,cAAP,CAAsB,OAAtB,EAA+B;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA/B,CAFY;AAI3BC,EAAAA,SAAS,EAAE,MAAM,KAAKJ,OAAL,CAAaK,KAAb,CAAmB,GAAnB,CAJU;AAM3BC,EAAAA,UAAU,EAAE,MAAM,KAAKF,SAAL,CAAe,CAAf,EAAkBG,KAAlB,CAAwB,CAAxB,EAA2B,KAAKH,SAAL,CAAe,CAAf,EAAkBI,MAAlB,GAA2B,CAAtD,CANS;AAQ3BC,EAAAA,OAAO,EAAE,MAAM,KAAKH,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,KAAKD,UAAL,CAAgBE,MAAzC,CARY;AAU3BE,EAAAA,iBAAiB,EAAE,MAAMZ,eAAe,CAACa,mBAAhB,CAAoCC,MAApC,CAA2CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,QAAT,OAAwB,KAAKN,OAA/E,CAVE;AAY3BO,EAAAA,SAAS,EAAE,MAAM,KAAKZ,SAAL,CAAe,CAAf,EAAkBC,KAAlB,CAAwB,GAAxB,EAA6BE,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC,CAZU;AAc3BU,EAAAA,YAAY,EAAE,MAAM,KAAKP,iBAAL,CAAuBE,MAAvB,CAA8BC,GAAG,IAAIA,GAAG,KAAK,KAAKP,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAA7C,EAA0EC,MAA1E,GAAmF,CAAnF,GAAuF,MAAvF,GAAgG,OAdzF;AAgB3BU,EAAAA,cAAc,EAAE,MAAM;AAEpB,QAAI,KAAKd,SAAL,CAAe,CAAf,MAAsB,IAAtB,IAA8B,KAAKA,SAAL,CAAe,CAAf,KAAqB,CAAnD,IAAwD,KAAKA,SAAL,CAAe,CAAf,KAAqB,CAAjF,EAAoF;AAClF,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;AAvB0B,CAA7B;AA6BAL,oBAAoB,CAACoB,IAArB,CAA0B,IAA1B,E,CACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,eAAepB,oBAAf,C,CAEA;AACA;AACA;AAIA;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AAEE;AAEE","sourcesContent":["import React from 'react'\nimport marketOpenDates from '../resources/marketopenDates.json'\n\nconst isMarketOpenFunction = {\n\n  usaTime: () => Date().toLocaleString(\"en-US\", { timeZone: \"America/New_York\" }),\n\n  splitTime: () => this.usaTime.split(' '),\n\n  todaysDate: () => this.splitTime[0].slice(0, this.splitTime[0].length - 1),\n\n  usaYear: () => this.todaysDate.slice(6, this.todaysDate.length),\n\n  thisYearsHolidays: () => marketOpenDates.stockMarketHolidays.filter(ele => ele.year.toString() === this.usaYear),\n\n  splitHour: () => this.splitTime[1].split(\":\").slice(0, 2),\n\n  isItAHoliday: () => this.thisYearsHolidays.filter(ele => ele === this.todaysDate.slice(0, 5)).length > 0 ? 'true' : 'false',\n\n  isItAfterHours: () => {\n\n    if (this.splitTime[2] === 'PM' && this.splitTime[0] >= 4 && this.splitTime[0] <= 8) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n\n\n}\n\nisMarketOpenFunction.bind(this)\n// const isMarketOpenFunction = () => {\n\n//   const usaTime = new Date().toLocaleString(\"en-US\", { timeZone: \"America/New_York\" });\n//   const splitTime = usaTime.split(' ')\n\n//   const todaysDate = splitTime[0].slice(0, splitTime[0].length - 1)\n//   const usaYear = todaysDate.slice(6, todaysDate.length)\n\n//   const thisYearsHolidays = marketOpenDates.stockMarketHolidays.filter(ele => ele.year.toString() === usaYear)\n\n//   const splitHour = splitTime[1].split(\":\").slice(0, 2)\n//   const isItAHoliday = () => thisYearsHolidays.filter(ele => ele === todaysDate.slice(0, 5)).length > 0 ? 'true' : 'false'\n//   const isItAfterHours = () => {\n\n//     if (splitTime[2] === 'PM' && splitTime[0] >= 4 && splitTime[0] <= 8) {\n//       return true\n//     } else {\n//       return false\n//     }\n//   }\n\n\n// }\n\nexport default isMarketOpenFunction\n\n// eastern time\n// premarket is 4am to 9:30am\n// afterhours is 4pm to 8pm\n\n\n\n// console.log(todaysDate)\n  // console.log(usaYear)\n  // console.log(thisYearsHolidays)\n  // const currentTime = () => {\n  //   return todaysDate\n  // }\n  // console.log(todaysDate.slice(0, 5))\n\n  // console.log(isItAfterHours())\n\n    // console.log(splitHour)\n\n      // console.log(splitTime)\n"]},"metadata":{},"sourceType":"module"}